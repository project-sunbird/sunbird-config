TestActorSystem{
  akka {
    actor {
    	default-dispatcher {
      		type = "Dispatcher"
    		executor = "fork-join-executor"
    		fork-join-executor {
        		parallelism-min = 1
        		parallelism-factor = 2.0
        		parallelism-max = 4
    		}
      		# Throughput for default Dispatcher, set to 1 for as fair as possible
      		throughput = 1
    	}
    }
  }
}

# Learning-Service Configuration
content.metadata.visibility.parent=["textbookunit", "courseunit", "lessonplanunit"]

# Cassandra Configuration
content.keyspace.name=content_store_test
content.keyspace.table=content_data_test
orchestrator.keyspace.name="script_store"
orchestrator.keyspace.table="script_data"
cassandra.host=localhost
cassandra.port=9042

# Redis Configuration
redis.host=localhost
redis.port=6379
redis.maxConnections=128

#Condition to enable publish locally
content.publish_task.enabled=true

#directory location where store unzip file
dist.directory="/data/tmp/dist/"
output.zipfile="/data/tmp/story.zip"
source.folder="/data/tmp/temp2/"
save.directory="/data/tmp/temp/"

# Content 2 vec analytics URL
CONTENT_TO_VEC_URL="http://172.31.27.233:9000/content-to-vec"

# FOR CONTENT WORKFLOW PIPELINE (CWP)

#--Content Workflow Pipeline Mode
OPERATION_MODE=TEST

#--Maximum Content Package File Size Limit in Bytes (50 MB)
MAX_CONTENT_PACKAGE_FILE_SIZE_LIMIT=52428800

#--Maximum Asset File Size Limit in Bytes (20 MB)
MAX_ASSET_FILE_SIZE_LIMIT=20971520

#--No of Retry While File Download Fails
RETRY_ASSET_DOWNLOAD_COUNT=1

#Google-vision-API
google.vision.tagging.enabled = false

#Cache-Manager Configuration
cache.type="in-memory"

#Orchestrator env properties
env="https://dev.ekstep.in/api/learning"

#S3 server configurations

#Current environment
s3.env=dev

#Environment specific buckets
s3.public.bucket="ekstep-public-dev"
s3.bucket.dev="ekstep-public"

#S3 Region configuration
s3.region=AP_SOUTH_1

#Folder configuration
s3.content.folder=content
s3.asset.folder=assets
s3.artifact.folder=artifact
s3.bundle.folder=bundle
s3.media.folder=media
s3.ecar.folder=ecar_files

graph.dir="/data/testgraphDB"
akka.request_timeout=30
environment.id=10000000
graph.ids=["language","en","hi","ka","te","ta","enTest","kaTest"]
graphId=domain
graph.passport.key.base="31b6fd1c4d64e745c867e61a45edc34a"
route.domain="bolt://localhost:7687"
route.bolt.write.domain="bolt://localhost:7687"
route.bolt.read.domain="bolt://localhost:7687"
route.bolt.comment.domain="bolt://localhost:7687"
route.all="bolt://localhost:7687"
route.bolt.write.all="bolt://localhost:7687"
route.bolt.read.all="bolt://localhost:7687"
route.bolt.comment.all="bolt://localhost:7687"
shard.id=1
platform.auth.check.enabled=false
platform.cache.ttl=3600000

#Framework get/push hierarchy into elasticsearch enable
framework.es.sync=true
framework.max_term_creation_limit=200

# Elasticsearch properties
dialcode.es_conn_info="10.42.8.73:9200"
search.es_conn_info="10.42.8.73:9200"

#dialcode.es_conn_info="localhost:9200"
#search.es_conn_info="localhost:9200"
search.fields.query=["name^100","title^100","lemma^100","code^100","tags^100","domain","subject","description^10","keywords^25","ageGroup^10","filter^10","theme^10","genre^10","objects^25","contentType^100","language^200","teachingMode^25","skills^10","learningObjective^10","curriculum^100","gradeLevel^100","developer^100","attributions^10","owner^50","text","words","releaseNotes"]
search.fields.date=["lastUpdatedOn","createdOn","versionDate","lastSubmittedOn","lastPublishedOn"]
search.fields.mode_collection=["identifier","name","objectType","contentType","mimeType","size","childNodes"]
search.batch.size=500
search.connection.timeout=30
platform-api-url="http://localhost:8080/language-service"

telemetry_env=dev

# DIAL Code Configuration
dialcode.keyspace.name="dialcode_store_test"
dialcode.keyspace.table="dial_code_test"
dialcode.max_count=1000

# System Configuration
system.config.keyspace.name="dialcode_store_test"
system.config.table="system_config_test"

#Publisher Configuration
publisher.keyspace.name="dialcode_store_test"
publisher.keyspace.table="publisher_test"

#DIAL Code Generator Configuration
dialcode.strip.chars="0"
dialcode.length=6.0
dialcode.large.prime_number=1679979167

#DIAL Code ElasticSearch Configuration
dialcode.index=false
dialcode.object_type="DialCode"
dialcode.search.limit=1000


#Assessment Item Config
assessment.keyspace.name=content_store_test
assessment.keyspace.table=question_data_test


#Kafka Test Setup Config
learning.test.zookeeper.url="localhost:3080"
learning.test.kafka.url="localhost:9095"

#Publish Istruction Event Config
kafka.topics.instruction="test.learning.job.request"
kafka.urls="localhost:9095"

#Youtube Standard Licence Validation
learning.content.youtube.validate.license=true
learning.content.youtube.application.name=fetch-youtube-license
learning.content.youtube.apikey=AIzaSyDyOeLwZGt6j28kHdT8gdmYBEsgL4RAUcE

#Copy Content Invalid Status List
learning.content.copy.invalid_status_list=["Flagged","FlaggedDraft","FraggedReview","Retired","Processing"]
learning.content.copy.null_prop_list=["downloadUrl", "artifactUrl", "variants", "createdOn", "collections", "children", "lastUpdatedOn", "sYS_INTERNAL_LAST_UPDATED_ON", "versionKey", "s3Key", "status", "pkgVersion", "toc_url", "mimeTypesCount", "contentTypesCount", "leafNodesCount", "childNodes", "prevState", "lastPublishedOn", "flagReasons", "compatibilityLevel", "size", "publishChecklist", "publishComment", "LastPublishedBy", "rejectReasons", "rejectComment"]

#Language Test Config
ignoreStartWordsList=["<Sentence","id=","<fs","head=","case_name=","paradigm=","name=","inf="]
tagNamesList=["NN","NST","PRP","DEM","VM","VAUX","JJ","RB","PSP","RP","CC","WQ","QF","QC","QO","CL","INTF","INJ","NEG","*C","RDP","ECH","UNK","NP","VGF","VGNF","VGINF","VGNN","JJP","RBP","NEGP","CCP","FRAGP","BLK"]
discardTokensList=["NNP","((","))","SYM"]
attributesTagIdentifier=af
defaultTokenCountAfterWord=10
specialCharRegEx="^([$&+,:;=?@#|!]*)$"
numberRegEx="^([+-]?\\d*\\.?\\d*)$"
ekstepPlatformURI="http://localhost:8080/language-service"
ekstepPlatformApiUserId=ilimi
DefinitionURL="http://localhost:8080/language-service/v1/language/"
#Language Orchestrator env properties
env="https://dev.ekstep.in/api/language"

# Youtube License Validation Regex Pattern
youtube.license.regex.pattern=["\\?vi?=([^&]*)", "watch\\?.*v=([^&]*)", "(?:embed|vi?)/([^/?]*)","^([A-Za-z0-9\\-\\_]*)"]

# Enable kafka topic check for Instruction Event
kafka.topic.check.enable=false