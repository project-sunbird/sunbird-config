LearningActorSystem{
  akka {
    actor {
    	default-dispatcher {
      		type = "Dispatcher"
    		executor = "fork-join-executor"
    		fork-join-executor {
        		parallelism-min = 1
        		parallelism-factor = 2.0
        		parallelism-max = 4
    		}
      		# Throughput for default Dispatcher, set to 1 for as fair as possible
      		throughput = 1
    	}
    }
  }
}

# Learning-Service Configuration
content.metadata.visibility.parent=["textbookunit", "courseunit", "lessonplanunit"]

# Cassandra Configuration
content.keyspace.name=content_store
content.keyspace.table=content_data
cassandra.host=localhost
cassandra.port=9042

# Redis Configuration
redis.host=localhost
redis.port=6379
redis.maxConnections=128

#Condition to enable publish locally
content.publish_task.enabled=true

#directory location where store unzip file
dist.directory=/data/tmp/dist/
output.zipfile=/data/tmp/story.zip
source.folder=/data/tmp/temp2/
save.directory=/data/tmp/temp/

# Content 2 vec analytics URL
CONTENT_TO_VEC_URL="http://172.31.27.233:9000/content-to-vec"

# FOR CONTENT WORKFLOW PIPELINE (CWP) 

#--Content Workflow Pipeline Mode
OPERATION_MODE=TEST

#--Maximum Content Package File Size Limit in Bytes (50 MB)
MAX_CONTENT_PACKAGE_FILE_SIZE_LIMIT=52428800

#--Maximum Asset File Size Limit in Bytes (20 MB)
MAX_ASSET_FILE_SIZE_LIMIT=20971520

#--No of Retry While File Download Fails
RETRY_ASSET_DOWNLOAD_COUNT=1

#Google-vision-API
google.vision.tagging.enabled = false

#Orchestrator env properties
env="https://dev.sunbird.org/api/learning"

#S3 server configurations

#Current environment
s3.env=dev

#Environment specific buckets
s3.config.bucket = sunbird-config-service
s3.config.bucket = sunbird-config-qa
s3.config.bucket = sunbird-config-prod

#S3 Region configuration
s3.region=US_EAST_2

#Folder configuration
s3.content.folder=content
s3.asset.folder=assets
s3.artifact.folder=artifact
s3.bundle.folder=bundle
s3.media.folder=media
s3.ecar.folder=ecar_files

# Graph Configuration
graph.dir=/data/graphDB
akka.request_timeout=30
environment.id=10000000
graph.ids=domain
graph.passport.key.base=31b6fd1c4d64e745c867e61a45edc34a
route.domain="bolt://localhost:7687"
route.bolt.write.domain="bolt://localhost:7687"
route.bolt.read.domain="bolt://localhost:7687"
route.bolt.comment.domain="bolt://localhost:7687"
route.all="bolt://localhost:7687"
route.bolt.write.all="bolt://localhost:7687"
route.bolt.read.all="bolt://localhost:7687"
route.bolt.comment.all="bolt://localhost:7687"
shard.id=1
platform.auth.check.enabled=false
platform.cache.ttl=3600000

# Elasticsearch properties
search.es_conn_info="localhost:9300"
search.fields.query=["name^100","title^100","lemma^100","code^100","tags^100","domain","subject","description^10","keywords^25","ageGroup^10","filter^10","theme^10","genre^10","objects^25","contentType^100","language^200","teachingMode^25","skills^10","learningObjective^10","curriculum^100","gradeLevel^100","developer^100","attributions^10","owner^50","text","words","releaseNotes"]
search.fields.date=["lastUpdatedOn","createdOn","versionDate","lastSubmittedOn","lastPublishedOn"]
search.batch.size=500
search.connection.timeout=30
platform-api-url="http://localhost:8080/language-service"

telemetry_env=dev